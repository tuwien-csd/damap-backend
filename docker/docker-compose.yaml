version: '3.3'

services:
  damap-be:
    # Since DAMAP containers are publicly available on Github packages one can
    # just pull the latest container image.
    image: ghcr.io/tuwien-csd/damap-backend:next
    pull_policy: always

    # uncomment the following two lines and comment the previous
    # 'image' to directly build the backend container from this repository.
    # build:
    #  context: ../

  damap-db:
    image: postgres:12
    pull_policy: always
    environment:
      POSTGRES_USER: damap
      POSTGRES_PASSWORD: pw4damap
      POSTGRES_DB: damap
    ports:
      - "8088:5432"

  keycloak:
    image: jboss/keycloak
    pull_policy: always
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin

      # Uncomment the following block to use a postgres
      # database for keycloak
      # DB_ADDR: keycloak-db
      # DB_DATABASE: keycloak
      # DB_USER: keycloak
      # DB_PORT: 5432
      # DB_PASSWORD: keycloak
      KEYCLOAK_IMPORT: /tmp/sample-damap-realm-export.json
    ports:
      - "8087:8080"
    volumes:
      - ./sample-damap-realm-export.json:/tmp/sample-damap-realm-export.json

  # Uncomment the following service block to start a Postgres
  # database for Keycloak. Also see the commented block in the keycloak
  # service.
  # keycloak-db:
  #  image: postgres:12
  #  environment:
  #    POSTGRES_USER: keycloak
  #    POSTGRES_PASSWORD: keycloak
  #    POSTGRES_DB: keycloak
  #    DB_VENDOR: postgres

  damap-fe:
    # Since DAMAP containers are publicly available on Github packages one can
    # just pull the latest container image.
    image: ghcr.io/tuwien-csd/damap-frontend:next
    pull_policy: always

    # uncomment the following two lines and comment the previous
    # 'image' to directly build the frontend container from the repository
    # assumed to be checked-out beside the 'damap-backend' repository.
    # build:
      # context: ../../damap-frontend

  api-mock:
    image: clue/json-server
    pull_policy: always
    command: db.json --routes routes.json
    volumes:
      - ./api-mock/data/db.json:/data/db.json
      - ./api-mock/data/routes.json:/data/routes.json
    ports:
      - "8091:80"

  proxy:
    # Since several components share the same ports and address, this docker
    # configuration needs a proxy to manage the connections between them,
    # as well as access from the outside.
    image: registry.hub.docker.com/library/nginx
    pull_policy: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8085:80"

  fits-service:
    image: islandora/fits:main
    pull_policy: always
    ports:
      - "8089:8080"

# Uncomment the following block to persist postgres data.
#    volumes:
#      - damap-db-data:/var/lib/postgresql/data
#volumes:
#  damap-db-data:
